#!/usr/bin/env python
"""Appends metadata to estimators files reading from input xml files.

The current version of the DMRG does not include any metadata into the
estimator files. Metadata are comment lines that have information about the run
the estimator was obtained from, such as the value of the Hamiltonian
parameters. These data can be useful when calling the scripts that extract,
analyze, and plot the estimator data. 

This script crawls down a directory finding all the estimator file, i.e. those
whose name is 'estimators.dat'. For each of them, it finds the corresponding
input xml file, which was generated by the DMRG code and contains the value of
the parameters of the run. It extracts the information for selected parameters,
and, finally, prepends this information in the proper metadata format to each
estimator file.

The script only works with fromScratch runs, and probably fails when you have
restarts.

The list of paramaters you want to add as metadata, `keys_to_watch`, should be
modified depending on your project.

Usage:
  append_metadata_from_xml.py [--dir=DIR]
  append_metadata_from_xml.py -h | --help

Options:
  -h --help         Shows this screen.
  --dir=DIR         Ouput directory [default: ./]

"""
from dmrg_helpers.extract.input_file_reader import InputFileReader
from dmrg_helpers.extract.locate_estimator_files import locate_estimator_files
import os
from itertools import izip
from docopt import docopt

def parent_dir_of_parent_dir(filename):
    """Returns the parent dir of the dir where the file lives.
    """
    filename = os.path.abspath(filename)
    return os.path.dirname(os.path.dirname(filename))

def main(args):
    estimator_files = locate_estimator_files(args['--dir'])
    input_files = [os.path.join(parent_dir_of_parent_dir(f), 'input.xml')
                for f in estimator_files]
    keys_to_watch = ['t', 'tp', 'U', 'J1', 'J2', 'Kring', 'numberOfSites']

    for pair in izip(estimator_files, input_files):
        reader = InputFileReader(keys_to_watch)
        reader.read(pair[0])
        reader.prepend_data_to_file(pair[1])

if __name__ == '__main__':
    args = docopt(__doc__, version = 0.1)
    main(args)
